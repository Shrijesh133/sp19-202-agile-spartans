#BlueJ class context
comment0.target=Board
comment1.params=
comment1.target=Board()
comment10.params=dontClearConsole
comment10.target=void\ printField(boolean)
comment11.params=
comment11.target=void\ placeRandomField()
comment12.params=
comment12.target=void\ setAllMovedFalse()
comment13.params=
comment13.target=boolean\ checkForMovableFields()
comment13.text=\ public\ void\ move(int\ pDirection)\ //Bewegt\ und\ verschmilzt\ die\ Felder\ je\ nach\ Richtung\n\ \ \ \ {\n\ \ \ \ \ \ \ \ int\ x;\n\ \ \ \ \ \ \ \ int\ y;\n\ \ \ \ \ \ \ \ boolean\ anyFieldsMoved\=false;\n\ \ \ \ \ \ \ \ setAllMovedFalse();\n\ \ \ \ \ \ \ \ switch\ (pDirection)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 1\:\ //Oben\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (y\=1;\ y<\ field.length;\ y++)\ //Verschachtelte\ for-Schleife,\ um\ die\ jeweiligen\ Felder\ des\ Arrays\ zu\ bearbeiten\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (x\=0;\ x<\ field.length;\ x++)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\=1;\ i<\ field.length;\ i++)\ //Noch\ eine\ for-Schleife,\ f\u00FCr\ den\ Fall\ dass\ ein\ Feld\ um\ mehrere\ Einheiten\ bewegt\ werden\ kann\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (field[x][i].getValue()\!\=0&&field[x][i-1].getMoved()\=\=false&&field[x][i].getMoved()\=\=false&&(field[x][i-1].getValue()\=\=field[x][i].getValue()||field[x][i-1].getValue()\=\=0))\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[x][i-1].getValue()\!\=0)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ addScore(field[x][i].getValue()*2);\ //F\u00FCgt\ Punktzahl\ zum\ Score\ hinzu\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //field[x][i].setMoved(true);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[x][i-1].setMoved(true);\ //moved\ wird\ auf\ true\ gesetzt,\ damit\ keine\ Felder\ doppelt\ addiert\ werden\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[x][i-1].setValue(field[x][i].getValue()+field[x][i-1].getValue());\ //Addiert\ Werte\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[x][i].setValue(0);\ //Setzt\ vorherigen\ Wert\ auf\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ anyFieldsMoved\=true;\ //Es\ wurden\ Felder\ bewegt\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 2\:\ //Unten\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (y\=(field.length-2);\ y>\=0;\ y--)\ //Verschachtelte\ for-Schleife,\ um\ die\ jeweiligen\ Felder\ des\ Arrays\ zu\ bearbeiten\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (x\=0;\ x<\ field.length;\ x++)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\=(field.length-2);\ i>\=0;\ i--)\ //Noch\ eine\ for-Schleife,\ f\u00FCr\ den\ Fall\ dass\ ein\ Feld\ um\ mehrere\ Einheiten\ bewegt\ werden\ kann\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[x][i].getValue()\!\=0&&field[x][i+1].getMoved()\=\=false&&field[x][i].getMoved()\=\=false&&(field[x][i+1].getValue()\=\=field[x][i].getValue()||field[x][i+1].getValue()\=\=0))\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[x][i+1].getValue()\!\=0)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ addScore(field[x][i].getValue()*2);\ //F\u00FCgt\ Punktzahl\ zum\ Score\ hinzu\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //field[x][i].setMoved(true);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[x][i+1].setMoved(true);\ //moved\ wird\ auf\ true\ gesetzt,\ damit\ keine\ Felder\ doppelt\ addiert\ werden\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[x][i+1].setValue(field[x][i].getValue()+field[x][i+1].getValue());\ //Addiert\ Werte\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[x][i].setValue(0);\ //Setzt\ vorherigen\ Wert\ auf\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ anyFieldsMoved\=true;\ //Es\ wurden\ Felder\ bewegt\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 3\:\ //Links\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (x\=1;\ x<field.length;\ x++)\ //Verschachtelte\ for-Schleife,\ um\ die\ jeweiligen\ Felder\ des\ Arrays\ zu\ bearbeiten\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (y\=0;\ y<\ field.length;\ y++)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\=1;\ i<field.length;\ i++)\ //Noch\ eine\ for-Schleife,\ f\u00FCr\ den\ Fall\ dass\ ein\ Feld\ um\ mehrere\ Einheiten\ bewegt\ werden\ kann\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[i][y].getValue()\!\=0&&field[i-1][y].getMoved()\=\=false&&field[i][y].getMoved()\=\=false&&(field[i-1][y].getValue()\=\=field[i][y].getValue()||field[i-1][y].getValue()\=\=0))\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[i-1][y].getValue()\!\=0)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ addScore(field[i][y].getValue()*2);\ //F\u00FCgt\ Punktzahl\ zum\ Score\ hinzu\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //field[i][y].setMoved(true);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[i-1][y].setMoved(true);\ //moved\ wird\ auf\ true\ gesetzt,\ damit\ keine\ Felder\ doppelt\ addiert\ werden\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[i-1][y].setValue(field[i][y].getValue()+field[i-1][y].getValue());\ //Addiert\ Werte\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[i][y].setValue(0);\ //Setzt\ vorherigen\ Wert\ auf\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ anyFieldsMoved\=true;\ //Es\ wurden\ Felder\ bewegt\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 4\:\ //Rechts\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (x\=(field.length-2);\ x>\=0;\ x--)\ //Verschachtelte\ for-Schleife,\ um\ die\ jeweiligen\ Felder\ des\ Arrays\ zu\ bearbeiten\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (y\=0;\ y<\ field.length;\ y++)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\=(field.length-2);\ i>\=0;\ i--)\ //Noch\ eine\ for-Schleife,\ f\u00FCr\ den\ Fall\ dass\ ein\ Feld\ um\ mehrere\ Einheiten\ bewegt\ werden\ kann\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[i][y].getValue()\!\=0&&field[i+1][y].getMoved()\=\=false&&field[i][y].getMoved()\=\=false&&(field[i+1][y].getValue()\=\=field[i][y].getValue()||field[i+1][y].getValue()\=\=0))\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(field[i+1][y].getValue()\!\=0)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ addScore(field[i][y].getValue()*2);\ //F\u00FCgt\ Punktzahl\ zum\ Score\ hinzu\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //field[i][y].setMoved(true);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[i+1][y].setMoved(true);\ //moved\ wird\ auf\ true\ gesetzt,\ damit\ keine\ Felder\ doppelt\ addiert\ werden\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[i+1][y].setValue(field[i][y].getValue()+field[i+1][y].getValue());\ //Addiert\ Werte\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ field[i][y].setValue(0);\ //Setzt\ vorherigen\ Wert\ auf\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ anyFieldsMoved\=true;\ //Es\ wurden\ Felder\ bewegt\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \n}
comment14.params=pX\ pY\ pValue
comment14.target=void\ placeSpecificField(int,\ int,\ int)
comment2.params=
comment2.target=void\ act()
comment3.params=
comment3.target=void\ showGameOverScreen()
comment4.params=
comment4.target=void\ updateFieldVisuals()
comment5.params=pX\ pY\ pValue
comment5.target=void\ playPlaceAnimation(int,\ int,\ int)
comment6.params=gameOver
comment6.target=void\ printScore(boolean)
comment6.text=public\ void\ addScore(int\ pAdd)\ //Addiert\ Score\ um\ pAdd\n\ \ \ \ {\n\ \ \ \ \ \ \ score\=score+pAdd;\n\ \ \ \ }\ \n\n\ \ \ \ public\ int\ getScore()\ //Getter\ wegen\ private\n\ \ \ \ {\n\ \ \ \ \ \ \ \ return\ score;\n}
comment7.params=
comment7.target=void\ switchDebugMode()
comment8.params=pNumberOfFields
comment8.target=void\ setInitialBoardForTesting(int)
comment9.params=
comment9.target=void\ fillField()
numComments=15
